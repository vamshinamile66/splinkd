{"name": "test_compare_coach_count_is_same_displayed_in_overview_and_coach_tab", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"c44569e6be13670abe53b6410827f604\")>\n\n    @pytest.mark.usefixtures(\"driver\")\n    def test_compare_coach_count_is_same_displayed_in_overview_and_coach_tab(driver):\n        page = AcademyOverviewPage(driver)\n        # Get coaches count in coaches tab\n>       coachTab_coach_count = page.coachTab_count_coaches()\n                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests\\test_academy_overview.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\academy_overview_page.py:62: in coachTab_count_coaches\n    return len(self._coach_name_elements())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\npages\\academy_overview_page.py:46: in _coach_name_elements\n    self.wait.until(EC.presence_of_all_elements_located(self.COACH_NAME_H3))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"c44569e6be13670abe53b6410827f604\")>\nmethod = <function presence_of_all_elements_located.<locals>._predicate at 0x000002509F866CA0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException"}, "start": 1758044068269, "stop": 1758044088868, "uuid": "38a333d4-7218-4a77-86a2-0a558218d579", "historyId": "e823a41a5ccd3002f1faafb3a0eaf4bd", "testCaseId": "e823a41a5ccd3002f1faafb3a0eaf4bd", "fullName": "tests.test_academy_overview#test_compare_coach_count_is_same_displayed_in_overview_and_coach_tab", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_academy_overview"}, {"name": "host", "value": "OTSI-Lap80"}, {"name": "thread", "value": "62328-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_academy_overview"}]}