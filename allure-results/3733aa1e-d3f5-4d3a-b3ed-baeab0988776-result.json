{"name": "test_assign_athlete_to_batch", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x124a8a3+63283]\n\tGetHandleVerifier [0x0x124a8e4+63348]\n\t(No symbol) [0x0x1083e43]\n\t(No symbol) [0x0x10cc8de]\n\t(No symbol) [0x0x10ccc7b]\n\t(No symbol) [0x0x1114ef2]\n\t(No symbol) [0x0x10f1464]\n\t(No symbol) [0x0x111271a]\n\t(No symbol) [0x0x10f1216]\n\t(No symbol) [0x0x10c0855]\n\t(No symbol) [0x0x10c16f4]\n\tGetHandleVerifier [0x0x14bbb43+2623955]\n\tGetHandleVerifier [0x0x14b6daa+2604090]\n\tGetHandleVerifier [0x0x127069a+218410]\n\tGetHandleVerifier [0x0x1260ed8+154984]\n\tGetHandleVerifier [0x0x126742d+180925]\n\tGetHandleVerifier [0x0x12522b8+94536]\n\tGetHandleVerifier [0x0x1252442+94930]\n\tGetHandleVerifier [0x0x123d5ea+9338]\n\tBaseThreadInitThunk [0x0x76b9fcc9+25]\n\tRtlGetAppContainerNamedObjectPath [0x0x777582ae+286]\n\tRtlGetAppContainerNamedObjectPath [0x0x7775827e+238]", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"544146218e0df1592102151223cefc6b\")>\n\n    @pytest.mark.usefixtures(\"driver\")\n    def test_assign_athlete_to_batch(driver):\n        page = AssignAthletesToBatchPage(driver)\n        # Step 1: Click on Programs tab\n        page.click_program_tab()\n        page.select_and_click_program_name(program_data[\"title\"])\n        page.click_actions_dropdown()\n        page.click_athlete_onboard()\n        # Step 2: Click on Add Athlete button\n>       page.click_add_athlete()\n\ntests\\test_assign_athletes_to_batch.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\assign_athletes_to_batch_page.py:64: in click_add_athlete\n    self.wait.until(EC.element_to_be_clickable(self.ADD_ATHLETE_BTN)).click()\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"544146218e0df1592102151223cefc6b\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x00000242C161E2A0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x124a8a3+63283]\nE       \tGetHandleVerifier [0x0x124a8e4+63348]\nE       \t(No symbol) [0x0x1083e43]\nE       \t(No symbol) [0x0x10cc8de]\nE       \t(No symbol) [0x0x10ccc7b]\nE       \t(No symbol) [0x0x1114ef2]\nE       \t(No symbol) [0x0x10f1464]\nE       \t(No symbol) [0x0x111271a]\nE       \t(No symbol) [0x0x10f1216]\nE       \t(No symbol) [0x0x10c0855]\nE       \t(No symbol) [0x0x10c16f4]\nE       \tGetHandleVerifier [0x0x14bbb43+2623955]\nE       \tGetHandleVerifier [0x0x14b6daa+2604090]\nE       \tGetHandleVerifier [0x0x127069a+218410]\nE       \tGetHandleVerifier [0x0x1260ed8+154984]\nE       \tGetHandleVerifier [0x0x126742d+180925]\nE       \tGetHandleVerifier [0x0x12522b8+94536]\nE       \tGetHandleVerifier [0x0x1252442+94930]\nE       \tGetHandleVerifier [0x0x123d5ea+9338]\nE       \tBaseThreadInitThunk [0x0x76b9fcc9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x0x777582ae+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x0x7775827e+238]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException"}, "attachments": [{"name": "stdout", "source": "eb9f0b2a-2588-496e-89fc-ce8411324e5d-attachment.txt", "type": "text/plain"}], "start": 1756981759453, "stop": 1756981788524, "uuid": "808cd4a5-4fce-4b2e-9919-db2c58ad4db5", "historyId": "8cdaf8c00d5fe48c7671c2d70ef56fcd", "testCaseId": "8cdaf8c00d5fe48c7671c2d70ef56fcd", "fullName": "tests.test_assign_athletes_to_batch#test_assign_athlete_to_batch", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_assign_athletes_to_batch"}, {"name": "host", "value": "OTSI-Lap80"}, {"name": "thread", "value": "74096-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_assign_athletes_to_batch"}]}