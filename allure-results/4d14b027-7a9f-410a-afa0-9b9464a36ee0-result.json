{"name": "test_login_correct_username_incorrect_password", "status": "failed", "statusDetails": {"message": "AssertionError: assert '' == 'your password is incorrect'\n  \n  \u001b[0m\u001b[91m- your password is incorrect\u001b[39;49;00m\u001b[90m\u001b[39;49;00m", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"5e1d28b9019ec9e12bea4b17259ef070\")>\n\n    @pytest.mark.usefixtures(\"driver\")\n    def test_login_correct_username_incorrect_password(driver):\n        \"\"\"Test login with correct username and incorrect password.\"\"\"\n        driver.get(config[\"base_url\"])\n        time.sleep(1)\n        username = config[\"username\"]\n        password = \"wrongpassword\"\n    \n        login_page = LoginPage(driver)\n        login_page.login(username, password)\n    \n        time.sleep(1)\n    \n        assert not login_page.is_logged_in(),\"Login succeeded with correct username and incorrect password\"\n        # Wait for the toast message to appear and extract it\n        from selenium.common.exceptions import TimeoutException\n        wait = WebDriverWait(driver, 10)\n    \n        try:\n            # Wait for presence of the error message element (same selector as other test)\n            error_element = wait.until(\n                EC.presence_of_element_located((By.CSS_SELECTOR, 'p[data-slot=\"form-message\"]'))\n            )\n            WebDriverWait(driver, 5).until(lambda d: error_element.is_displayed())\n            actual_error_message = error_element.text.strip()\n        except TimeoutException:\n            actual_error_message = \"\"\n            print(\" Error message not found within timeout.\")\n            print(\"actual error message:\", actual_error_message)\n        expected_invalid_password_error_message = config[\"expected_invalid_password_error_message\"]\n        print(f\"Expected error message: '{expected_invalid_password_error_message}'\")\n        print(\"Captured error message:\", actual_error_message)\n>       assert actual_error_message == expected_invalid_password_error_message\nE       AssertionError: assert '' == 'your password is incorrect'\nE         \nE         \u001b[0m\u001b[91m- your password is incorrect\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n\ntests\\test_login.py:46: AssertionError"}, "description": "Test login with correct username and incorrect password.", "attachments": [{"name": "stdout", "source": "9623fea1-04df-4ed9-bf58-ae85c4b6a8e4-attachment.txt", "type": "text/plain"}], "start": 1757255834424, "stop": 1757255866928, "uuid": "9ceefc67-fb22-4fce-9bb3-5eed47d8eecf", "historyId": "d3743d5d9d3856212658b7472d60eb62", "testCaseId": "d3743d5d9d3856212658b7472d60eb62", "fullName": "tests.test_login#test_login_correct_username_incorrect_password", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_login"}, {"name": "host", "value": "OTSI-Lap80"}, {"name": "thread", "value": "70228-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_login"}]}