{"name": "test_forgotpassword_function", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: unknown error: unhandled inspector error: {\"code\":-32000,\"message\":\"Node with given id does not belong to the document\"}\n  (Session info: chrome=139.0.7258.155)\nStacktrace:\n\tGetHandleVerifier [0x0x32a8a3+63283]\n\tGetHandleVerifier [0x0x32a8e4+63348]\n\t(No symbol) [0x0x163e43]\n\t(No symbol) [0x0x15406d]\n\t(No symbol) [0x0x152a09]\n\t(No symbol) [0x0x15327d]\n\t(No symbol) [0x0x173b5f]\n\t(No symbol) [0x0x175c02]\n\t(No symbol) [0x0x174a20]\n\t(No symbol) [0x0x16b120]\n\t(No symbol) [0x0x1695fa]\n\t(No symbol) [0x0x16c97a]\n\t(No symbol) [0x0x16c9f7]\n\t(No symbol) [0x0x1ac174]\n\t(No symbol) [0x0x1acc7b]\n\t(No symbol) [0x0x1a24d1]\n\t(No symbol) [0x0x1d1464]\n\t(No symbol) [0x0x1a2044]\n\t(No symbol) [0x0x1d1694]\n\t(No symbol) [0x0x1f271a]\n\t(No symbol) [0x0x1d1216]\n\t(No symbol) [0x0x1a0855]\n\t(No symbol) [0x0x1a16f4]\n\tGetHandleVerifier [0x0x59bb43+2623955]\n\tGetHandleVerifier [0x0x596daa+2604090]\n\tGetHandleVerifier [0x0x35069a+218410]\n\tGetHandleVerifier [0x0x340ed8+154984]\n\tGetHandleVerifier [0x0x34742d+180925]\n\tGetHandleVerifier [0x0x3322b8+94536]\n\tGetHandleVerifier [0x0x332442+94930]\n\tGetHandleVerifier [0x0x31d5ea+9338]\n\tBaseThreadInitThunk [0x0x76b9fcc9+25]\n\tRtlGetAppContainerNamedObjectPath [0x0x777582ae+286]\n\tRtlGetAppContainerNamedObjectPath [0x0x7775827e+238]\n\t(No symbol) [0x0]", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ef0d10755d33004adaac63a006af4166\")>\n\n    @pytest.mark.usefixtures(\"driver\")\n    def test_forgotpassword_function(driver):\n        driver.get(config[\"base_url\"])\n        captch_url= config[\"captch_url\"]\n        # Get credentials from config file\n        username = config[\"forgotpassword\"][\"email\"]\n        newpassword = config[\"forgotpassword\"][\"newpassword\"]\n        confirmpassword = config[\"forgotpassword\"][\"confirmpassword\"]\n        # Initialize forgot page and perform forgotpassword\n        forgotpass = Forgotpassword(driver)\n        # forgotpass.forgotpassword(username, newpassword, confirmpassword, captch_url)\n        forgotpass.click_forgot_password_link()\n        forgotpass.create_username(username)\n        forgotpass.click_continue_button()\n        time.sleep(1)\n>       forgotpass.capture_otp(username,captch_url)\n\ntests\\test_forgotpassword.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\forgotpassword_page.py:40: in capture_otp\n    rows = table.find_elements(By.XPATH, \".//tbody/tr\")\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:632: in find_elements\n    return self._execute(Command.FIND_CHILD_ELEMENTS, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:574: in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:447: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002012AFBA710>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: unhandled inspector error: {\\\\\"c...dObjectPath [0x0x777582ae+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x0x7775827e+238]\\\\n\\\\t(No symbol) [0x0]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: unhandled inspector error: {\"code\":-32000,\"message\":\"Node with given id does not belong to the document\"}\nE         (Session info: chrome=139.0.7258.155)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x32a8a3+63283]\nE       \tGetHandleVerifier [0x0x32a8e4+63348]\nE       \t(No symbol) [0x0x163e43]\nE       \t(No symbol) [0x0x15406d]\nE       \t(No symbol) [0x0x152a09]\nE       \t(No symbol) [0x0x15327d]\nE       \t(No symbol) [0x0x173b5f]\nE       \t(No symbol) [0x0x175c02]\nE       \t(No symbol) [0x0x174a20]\nE       \t(No symbol) [0x0x16b120]\nE       \t(No symbol) [0x0x1695fa]\nE       \t(No symbol) [0x0x16c97a]\nE       \t(No symbol) [0x0x16c9f7]\nE       \t(No symbol) [0x0x1ac174]\nE       \t(No symbol) [0x0x1acc7b]\nE       \t(No symbol) [0x0x1a24d1]\nE       \t(No symbol) [0x0x1d1464]\nE       \t(No symbol) [0x0x1a2044]\nE       \t(No symbol) [0x0x1d1694]\nE       \t(No symbol) [0x0x1f271a]\nE       \t(No symbol) [0x0x1d1216]\nE       \t(No symbol) [0x0x1a0855]\nE       \t(No symbol) [0x0x1a16f4]\nE       \tGetHandleVerifier [0x0x59bb43+2623955]\nE       \tGetHandleVerifier [0x0x596daa+2604090]\nE       \tGetHandleVerifier [0x0x35069a+218410]\nE       \tGetHandleVerifier [0x0x340ed8+154984]\nE       \tGetHandleVerifier [0x0x34742d+180925]\nE       \tGetHandleVerifier [0x0x3322b8+94536]\nE       \tGetHandleVerifier [0x0x332442+94930]\nE       \tGetHandleVerifier [0x0x31d5ea+9338]\nE       \tBaseThreadInitThunk [0x0x76b9fcc9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x0x777582ae+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x0x7775827e+238]\nE       \t(No symbol) [0x0]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: WebDriverException"}, "start": 1757330573119, "stop": 1757330591046, "uuid": "5fbf964d-d2de-49de-a50a-c0e95706360a", "historyId": "b0166c140ac41016787eab8051692fd9", "testCaseId": "b0166c140ac41016787eab8051692fd9", "fullName": "tests.test_forgotpassword#test_forgotpassword_function", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_forgotpassword"}, {"name": "host", "value": "OTSI-Lap80"}, {"name": "thread", "value": "21716-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_forgotpassword"}]}