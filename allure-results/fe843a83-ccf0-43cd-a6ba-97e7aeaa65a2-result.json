{"name": "test_onboard_multiple_team_members[member5]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=140.0.7339.185)\nStacktrace:\n\tGetHandleVerifier [0x0x111c333+65459]\n\tGetHandleVerifier [0x0x111c374+65524]\n\t(No symbol) [0x0xf3d973]\n\t(No symbol) [0x0xf1c19d]\n\t(No symbol) [0x0xfb059e]\n\t(No symbol) [0x0xfcaef9]\n\t(No symbol) [0x0xfa9bf6]\n\t(No symbol) [0x0xf7b38e]\n\t(No symbol) [0x0xf7c274]\n\tGetHandleVerifier [0x0x139eda3+2697763]\n\tGetHandleVerifier [0x0x1399ec7+2677575]\n\tGetHandleVerifier [0x0x1144194+228884]\n\tGetHandleVerifier [0x0x11349f8+165496]\n\tGetHandleVerifier [0x0x113b18d+192013]\n\tGetHandleVerifier [0x0x11247d8+99416]\n\tGetHandleVerifier [0x0x1124972+99826]\n\tGetHandleVerifier [0x0x110ebea+10346]\n\tBaseThreadInitThunk [0x0x75cbfcc9+25]\n\tRtlGetAppContainerNamedObjectPath [0x0x77ab82ae+286]\n\tRtlGetAppContainerNamedObjectPath [0x0x77ab827e+238]", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"23b5b85d0d68ff5f0f42598bd46944c2\")>\nmember = {'day': '8', 'email': 'myteam17588644415@otsi.co.in', 'first_name': 'sanjay5', 'last_name': 'damu5', ...}\n\n    @pytest.mark.usefixtures(\"driver\")\n    @pytest.mark.parametrize(\"member\", members_list)\n    def test_onboard_multiple_team_members(driver, member):\n        page = MyTeamPage(driver)\n>       page.click_my_team_tab()\n\ntests\\test_my_team.py:287: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\my_team_page.py:38: in click_my_team_tab\n    self.wait.until(EC.element_to_be_clickable(self.my_team_tab)).click()\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:129: in until\n    value = method(self._driver)\n            ^^^^^^^^^^^^^^^^^^^^\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:622: in _predicate\n    target = driver.find_element(*target)  # grab element at locator\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:914: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:447: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000186DD7DEE90>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: target window already closed\\\\...tRtlGetAppContainerNamedObjectPath [0x0x77ab82ae+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x0x77ab827e+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: chrome=140.0.7339.185)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x111c333+65459]\nE       \tGetHandleVerifier [0x0x111c374+65524]\nE       \t(No symbol) [0x0xf3d973]\nE       \t(No symbol) [0x0xf1c19d]\nE       \t(No symbol) [0x0xfb059e]\nE       \t(No symbol) [0x0xfcaef9]\nE       \t(No symbol) [0x0xfa9bf6]\nE       \t(No symbol) [0x0xf7b38e]\nE       \t(No symbol) [0x0xf7c274]\nE       \tGetHandleVerifier [0x0x139eda3+2697763]\nE       \tGetHandleVerifier [0x0x1399ec7+2677575]\nE       \tGetHandleVerifier [0x0x1144194+228884]\nE       \tGetHandleVerifier [0x0x11349f8+165496]\nE       \tGetHandleVerifier [0x0x113b18d+192013]\nE       \tGetHandleVerifier [0x0x11247d8+99416]\nE       \tGetHandleVerifier [0x0x1124972+99826]\nE       \tGetHandleVerifier [0x0x110ebea+10346]\nE       \tBaseThreadInitThunk [0x0x75cbfcc9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x0x77ab82ae+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x0x77ab827e+238]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: NoSuchWindowException"}, "parameters": [{"name": "member", "value": "{'first_name': 'sanjay5', 'last_name': 'damu5', 'month': '8', 'day': '8', 'year': '1985', 'email': 'myteam17588644415@otsi.co.in', 'mobile': '9994316752'}"}], "start": 1758864496956, "stop": 1758864496975, "uuid": "8458bee0-26d9-436d-9d9c-5a604fe554f8", "historyId": "32042264d3a0d53a17a64180f3ec7545", "testCaseId": "898adfdd58f7139608b53208b4b8a42b", "fullName": "tests.test_my_team#test_onboard_multiple_team_members", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_my_team"}, {"name": "host", "value": "OTSI-Lap80"}, {"name": "thread", "value": "95044-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_my_team"}]}