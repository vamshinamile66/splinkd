{"uid":"ec2dab4b5f791afb","name":"test_field_validations","fullName":"tests.test_academy_registration#test_field_validations","historyId":"0224d3e967866456a4e98797d160c009","time":{"start":1757176952984,"stop":1757176963864,"duration":10880},"status":"broken","statusMessage":"TypeError: selenium.webdriver.remote.webdriver.WebDriver.find_element() argument after * must be an iterable, not method","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"5c4879a611864b605fc07ac4ea7c91eb\")>\n\n    @pytest.mark.usefixtures(\"driver\")\n    def test_field_validations(driver):\n            academypage = RegisterAcademyPage(driver)\n            academy = config[\"academy_reg\"]\n            #click on previous button\n            # academypage.click_previous()\n            time.sleep(1)\n            academypage.academy_name_field(academy[\"academy_name\"])\n            academypage.mobile_number_field(academy[\"mobile_number\"])\n            academypage.select_sports(academy[\"sports\"])\n            academypage.upload_file(academy[\"file_path\"])\n            academypage.upload_logo(academy[\"logo_path\"])\n            time.sleep(1)\n>           academypage.clear_field(academypage.academy_name_field)\n\ntests\\test_academy_registration.py:103: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\academy_registration_page.py:212: in clear_field\n    field = self.wait.until(EC.presence_of_element_located(locator))\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:129: in until\n    value = method(self._driver)\n            ^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"5c4879a611864b605fc07ac4ea7c91eb\")>\n\n    def _predicate(driver: WebDriverOrWebElement):\n>       return driver.find_element(*locator)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       TypeError: selenium.webdriver.remote.webdriver.WebDriver.find_element() argument after * must be an iterable, not method\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:104: TypeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1757176916432,"stop":1757176921199,"duration":4767},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"broken","statusMessage":"TypeError: selenium.webdriver.remote.webdriver.WebDriver.find_element() argument after * must be an iterable, not method","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"5c4879a611864b605fc07ac4ea7c91eb\")>\n\n    @pytest.mark.usefixtures(\"driver\")\n    def test_field_validations(driver):\n            academypage = RegisterAcademyPage(driver)\n            academy = config[\"academy_reg\"]\n            #click on previous button\n            # academypage.click_previous()\n            time.sleep(1)\n            academypage.academy_name_field(academy[\"academy_name\"])\n            academypage.mobile_number_field(academy[\"mobile_number\"])\n            academypage.select_sports(academy[\"sports\"])\n            academypage.upload_file(academy[\"file_path\"])\n            academypage.upload_logo(academy[\"logo_path\"])\n            time.sleep(1)\n>           academypage.clear_field(academypage.academy_name_field)\n\ntests\\test_academy_registration.py:103: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\academy_registration_page.py:212: in clear_field\n    field = self.wait.until(EC.presence_of_element_located(locator))\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:129: in until\n    value = method(self._driver)\n            ^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"5c4879a611864b605fc07ac4ea7c91eb\")>\n\n    def _predicate(driver: WebDriverOrWebElement):\n>       return driver.find_element(*locator)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       TypeError: selenium.webdriver.remote.webdriver.WebDriver.find_element() argument after * must be an iterable, not method\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:104: TypeError","steps":[],"attachments":[{"uid":"f1f46eb73d676698","name":"stdout","source":"f1f46eb73d676698.txt","type":"text/plain","size":316}],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":1},"afterStages":[{"name":"driver::0","time":{"start":1757176964274,"stop":1757176967132,"duration":2858},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_academy_registration"},{"name":"host","value":"OTSI-Lap80"},{"name":"thread","value":"76156-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_academy_registration"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"ec2dab4b5f791afb.json","parameterValues":[]}