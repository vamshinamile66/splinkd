{"uid":"fd031396f9804e61","name":"test_academy_name_field_validations","fullName":"tests.test_academy_registration#test_academy_name_field_validations","historyId":"c766d400531f16d107a7132ef755e713","time":{"start":1757252466677,"stop":1757252480053,"duration":13376},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x90a8a3+63283]\n\tGetHandleVerifier [0x0x90a8e4+63348]\n\t(No symbol) [0x0x743e43]\n\t(No symbol) [0x0x78c8de]\n\t(No symbol) [0x0x78cc7b]\n\t(No symbol) [0x0x7d4ef2]\n\t(No symbol) [0x0x7b1464]\n\t(No symbol) [0x0x7d271a]\n\t(No symbol) [0x0x7b1216]\n\t(No symbol) [0x0x780855]\n\t(No symbol) [0x0x7816f4]\n\tGetHandleVerifier [0x0xb7bb43+2623955]\n\tGetHandleVerifier [0x0xb76daa+2604090]\n\tGetHandleVerifier [0x0x93069a+218410]\n\tGetHandleVerifier [0x0x920ed8+154984]\n\tGetHandleVerifier [0x0x92742d+180925]\n\tGetHandleVerifier [0x0x9122b8+94536]\n\tGetHandleVerifier [0x0x912442+94930]\n\tGetHandleVerifier [0x0x8fd5ea+9338]\n\tBaseThreadInitThunk [0x0x76b9fcc9+25]\n\tRtlGetAppContainerNamedObjectPath [0x0x777582ae+286]\n\tRtlGetAppContainerNamedObjectPath [0x0x7775827e+238]","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"be68d181555783fd75c2f42bacaa9efa\")>\n\n    @pytest.mark.usefixtures(\"driver\")\n    def test_academy_name_field_validations(driver):\n            academypage = RegisterAcademyPage(driver)\n            academy = config[\"academy_reg\"]\n            #academypage.click_previous()\n            time.sleep(1)\n            academypage.academy_name_field(academy[\"academy_name\"])\n            academypage.mobile_number_field(academy[\"mobile_number\"])\n>           academypage.select_sports(academy[\"sports\"])\n\ntests\\test_academy_registration.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\academy_registration_page.py:121: in select_sports\n    self.wait.until(EC.element_to_be_clickable(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"be68d181555783fd75c2f42bacaa9efa\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000001DC0002B4C0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x90a8a3+63283]\nE       \tGetHandleVerifier [0x0x90a8e4+63348]\nE       \t(No symbol) [0x0x743e43]\nE       \t(No symbol) [0x0x78c8de]\nE       \t(No symbol) [0x0x78cc7b]\nE       \t(No symbol) [0x0x7d4ef2]\nE       \t(No symbol) [0x0x7b1464]\nE       \t(No symbol) [0x0x7d271a]\nE       \t(No symbol) [0x0x7b1216]\nE       \t(No symbol) [0x0x780855]\nE       \t(No symbol) [0x0x7816f4]\nE       \tGetHandleVerifier [0x0xb7bb43+2623955]\nE       \tGetHandleVerifier [0x0xb76daa+2604090]\nE       \tGetHandleVerifier [0x0x93069a+218410]\nE       \tGetHandleVerifier [0x0x920ed8+154984]\nE       \tGetHandleVerifier [0x0x92742d+180925]\nE       \tGetHandleVerifier [0x0x9122b8+94536]\nE       \tGetHandleVerifier [0x0x912442+94930]\nE       \tGetHandleVerifier [0x0x8fd5ea+9338]\nE       \tBaseThreadInitThunk [0x0x76b9fcc9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x0x777582ae+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x0x7775827e+238]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1757252404285,"stop":1757252408784,"duration":4499},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x90a8a3+63283]\n\tGetHandleVerifier [0x0x90a8e4+63348]\n\t(No symbol) [0x0x743e43]\n\t(No symbol) [0x0x78c8de]\n\t(No symbol) [0x0x78cc7b]\n\t(No symbol) [0x0x7d4ef2]\n\t(No symbol) [0x0x7b1464]\n\t(No symbol) [0x0x7d271a]\n\t(No symbol) [0x0x7b1216]\n\t(No symbol) [0x0x780855]\n\t(No symbol) [0x0x7816f4]\n\tGetHandleVerifier [0x0xb7bb43+2623955]\n\tGetHandleVerifier [0x0xb76daa+2604090]\n\tGetHandleVerifier [0x0x93069a+218410]\n\tGetHandleVerifier [0x0x920ed8+154984]\n\tGetHandleVerifier [0x0x92742d+180925]\n\tGetHandleVerifier [0x0x9122b8+94536]\n\tGetHandleVerifier [0x0x912442+94930]\n\tGetHandleVerifier [0x0x8fd5ea+9338]\n\tBaseThreadInitThunk [0x0x76b9fcc9+25]\n\tRtlGetAppContainerNamedObjectPath [0x0x777582ae+286]\n\tRtlGetAppContainerNamedObjectPath [0x0x7775827e+238]","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"be68d181555783fd75c2f42bacaa9efa\")>\n\n    @pytest.mark.usefixtures(\"driver\")\n    def test_academy_name_field_validations(driver):\n            academypage = RegisterAcademyPage(driver)\n            academy = config[\"academy_reg\"]\n            #academypage.click_previous()\n            time.sleep(1)\n            academypage.academy_name_field(academy[\"academy_name\"])\n            academypage.mobile_number_field(academy[\"mobile_number\"])\n>           academypage.select_sports(academy[\"sports\"])\n\ntests\\test_academy_registration.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\academy_registration_page.py:121: in select_sports\n    self.wait.until(EC.element_to_be_clickable(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"be68d181555783fd75c2f42bacaa9efa\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000001DC0002B4C0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x90a8a3+63283]\nE       \tGetHandleVerifier [0x0x90a8e4+63348]\nE       \t(No symbol) [0x0x743e43]\nE       \t(No symbol) [0x0x78c8de]\nE       \t(No symbol) [0x0x78cc7b]\nE       \t(No symbol) [0x0x7d4ef2]\nE       \t(No symbol) [0x0x7b1464]\nE       \t(No symbol) [0x0x7d271a]\nE       \t(No symbol) [0x0x7b1216]\nE       \t(No symbol) [0x0x780855]\nE       \t(No symbol) [0x0x7816f4]\nE       \tGetHandleVerifier [0x0xb7bb43+2623955]\nE       \tGetHandleVerifier [0x0xb76daa+2604090]\nE       \tGetHandleVerifier [0x0x93069a+218410]\nE       \tGetHandleVerifier [0x0x920ed8+154984]\nE       \tGetHandleVerifier [0x0x92742d+180925]\nE       \tGetHandleVerifier [0x0x9122b8+94536]\nE       \tGetHandleVerifier [0x0x912442+94930]\nE       \tGetHandleVerifier [0x0x8fd5ea+9338]\nE       \tBaseThreadInitThunk [0x0x76b9fcc9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x0x777582ae+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x0x7775827e+238]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","steps":[],"attachments":[{"uid":"d77bc12c230b61fb","name":"stdout","source":"d77bc12c230b61fb.txt","type":"text/plain","size":95}],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":1},"afterStages":[{"name":"driver::0","time":{"start":1757252480435,"stop":1757252483380,"duration":2945},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_academy_registration"},{"name":"host","value":"OTSI-Lap80"},{"name":"thread","value":"27736-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_academy_registration"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"fd031396f9804e61.json","parameterValues":[]}