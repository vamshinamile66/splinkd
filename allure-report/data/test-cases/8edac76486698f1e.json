{"uid":"8edac76486698f1e","name":"test_assign_athlete_to_batch","fullName":"tests.test_assign_athletes_to_batch#test_assign_athlete_to_batch","historyId":"8cdaf8c00d5fe48c7671c2d70ef56fcd","time":{"start":1756999956618,"stop":1757000036416,"duration":79798},"status":"failed","statusMessage":"AssertionError: Expected success message not found. Got: \nassert 'athlete added to batch successfully' in ''\n +  where '' = <built-in method lower of str object at 0x00007FFAAFE9C6E0>()\n +    where <built-in method lower of str object at 0x00007FFAAFE9C6E0> = ''.lower","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"328bcd9ec544ceaa10d5ded27ca77777\")>\n\n    @pytest.mark.usefixtures(\"driver\")\n    def test_assign_athlete_to_batch(driver):\n        page = AssignAthletesToBatchPage(driver)\n        # Step 1: Click on Programs tab\n        page.click_program_tab()\n        page.select_and_click_program_name(program_data[\"title\"])\n        page.click_actions_dropdown()\n        page.click_athlete_onboard()\n        # Step 3: Click on Search Athlete button\n        page.click_search_button()\n        # Step 4: Search and select athlete by name\n        page.search_and_select_athlete(\"John\")\n        page.select_payment_status_via_keys(\"Fully Paid\")\n        # Step 5 & 6: Select payment status \"Fully Paid\"\n        # page.click_drop_down_button()\n        # page.select_payment_status(\"paid_till_next_due\")\n        # page.select_payment()\n        # Step 7: Click on Add Athlete submit\n        page.click_add_athlete_submit()\n        # Step 8: Verify success message with retry wait\n        success_message = page.get_success_message_text()\n        print(f\"[INFO] Success message: {success_message}\")\n>       assert \"athlete added to batch successfully\" in success_message.lower(), \\\n            f\"Expected success message not found. Got: {success_message}\"\nE       AssertionError: Expected success message not found. Got: \nE       assert 'athlete added to batch successfully' in ''\nE        +  where '' = <built-in method lower of str object at 0x00007FFAAFE9C6E0>()\nE        +    where <built-in method lower of str object at 0x00007FFAAFE9C6E0> = ''.lower\n\ntests\\test_assign_athletes_to_batch.py:32: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1756999935992,"stop":1756999940905,"duration":4913},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: Expected success message not found. Got: \nassert 'athlete added to batch successfully' in ''\n +  where '' = <built-in method lower of str object at 0x00007FFAAFE9C6E0>()\n +    where <built-in method lower of str object at 0x00007FFAAFE9C6E0> = ''.lower","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"328bcd9ec544ceaa10d5ded27ca77777\")>\n\n    @pytest.mark.usefixtures(\"driver\")\n    def test_assign_athlete_to_batch(driver):\n        page = AssignAthletesToBatchPage(driver)\n        # Step 1: Click on Programs tab\n        page.click_program_tab()\n        page.select_and_click_program_name(program_data[\"title\"])\n        page.click_actions_dropdown()\n        page.click_athlete_onboard()\n        # Step 3: Click on Search Athlete button\n        page.click_search_button()\n        # Step 4: Search and select athlete by name\n        page.search_and_select_athlete(\"John\")\n        page.select_payment_status_via_keys(\"Fully Paid\")\n        # Step 5 & 6: Select payment status \"Fully Paid\"\n        # page.click_drop_down_button()\n        # page.select_payment_status(\"paid_till_next_due\")\n        # page.select_payment()\n        # Step 7: Click on Add Athlete submit\n        page.click_add_athlete_submit()\n        # Step 8: Verify success message with retry wait\n        success_message = page.get_success_message_text()\n        print(f\"[INFO] Success message: {success_message}\")\n>       assert \"athlete added to batch successfully\" in success_message.lower(), \\\n            f\"Expected success message not found. Got: {success_message}\"\nE       AssertionError: Expected success message not found. Got: \nE       assert 'athlete added to batch successfully' in ''\nE        +  where '' = <built-in method lower of str object at 0x00007FFAAFE9C6E0>()\nE        +    where <built-in method lower of str object at 0x00007FFAAFE9C6E0> = ''.lower\n\ntests\\test_assign_athletes_to_batch.py:32: AssertionError","steps":[],"attachments":[{"uid":"cee33da7cb1ca142","name":"stdout","source":"cee33da7cb1ca142.txt","type":"text/plain","size":226}],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":1},"afterStages":[{"name":"driver::0","time":{"start":1757000036833,"stop":1757000039417,"duration":2584},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_assign_athletes_to_batch"},{"name":"host","value":"OTSI-Lap80"},{"name":"thread","value":"83472-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_assign_athletes_to_batch"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"8edac76486698f1e.json","parameterValues":[]}